{"version":3,"sources":["sky/item.js","sky/index.js","App.js","serviceWorker.js","index.js","react.png"],"names":["Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","style","transform","concat","from","Math","random","setStyle","bind","assertThisInitialized","setTimeout","movingStyle","window","innerHeight","innerWidth","_this$props","time","size","position","zIndex","transition","MsTransform","MsTransition","Webkitransform","WebkitTransition","overflow","willChange","imgSize","width","height","setState","_this2","_this$state","react_default","a","createElement","es","background","disabled","hideGrid","canvasWidth","canvasHeight","ref","canvasDraw","loadableCanvas","saveData","savedPicture","React","Component","Sky","moves","movement","many","how","temp_moves","i","push","rotation","floor","round","fromX","fromY","toX","toY","savedPictureList","outerStyle","top","left","margin","padding","id","map","e","conditional","length","item","to","key","children","defaultProps","App","color","brushRadius","lazyRadius","handleSavePicture","JSON","parse","saveableCanvas","getSaveData","lines","toConsumableArray","className","sky","borderRadius","brushColor","toString","es_button","onClick","clear","undo","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ae78b99e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport CanvasDraw from \"react-canvas-draw\";\r\n\r\nclass Item extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      style: {\r\n        transform: `translate(${this.props.from[0]}px, ${this.props.from[1]}px) rotate(${Math.random() * 360}deg)`,\r\n      }\r\n    }\r\n    this.setStyle = this.setStyle.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(this.setStyle, 1);\r\n  }\r\n\r\n  setStyle() {\r\n    const movingStyle = `translate(${Math.random() * window.innerHeight * 2}px, ${Math.random() * window.innerWidth * 2}px) rotate(${Math.random() * 360}deg)`;\r\n    const { time, size } = this.props;\r\n    const style = {\r\n      position: 'absolute',\r\n      zIndex: '-1',\r\n      transform: movingStyle,\r\n      transition: `transform ${time}s ease-out`,\r\n      MsTransform: movingStyle,\r\n      MsTransition: `transform ${time}s ease-out`,\r\n      Webkitransform: movingStyle,\r\n      WebkitTransition: `transform ${time}s ease-out`,\r\n      overflow: 'visible',\r\n      willChange: 'transform',\r\n    }\r\n    const imgSize = {\r\n      width: size,\r\n      height: 'auto',\r\n    }\r\n    this.setState({\r\n      style: style,\r\n      size: imgSize,\r\n    });\r\n    setTimeout(this.setStyle, time * 1000);\r\n  }\r\n\r\n  render() {\r\n    const { style, size } = this.state;\r\n\r\n    return (\r\n      <div style={style}>\r\n         <CanvasDraw\r\n          style={{background: \"#ff000000\"}}\r\n          disabled\r\n          hideGrid \r\n          canvasWidth={180}\r\n          canvasHeight={180}\r\n          ref={canvasDraw => (this.loadableCanvas = canvasDraw)}\r\n          saveData={this.props.savedPicture}\r\n        />\r\n        \r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nItem.propTypes = {\r\n  time: PropTypes.number.isRequired,\r\n  size: PropTypes.string.isRequired,\r\n  from: PropTypes.array.isRequired,\r\n  what: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Item;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Item from './item'\r\n\r\nclass Sky extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      moves: [],\r\n    }\r\n    this.movement = this.movement.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const many = this.props.how;\r\n    const temp_moves = [];\r\n    for (let i = 0; i < many; i++) {\r\n      temp_moves.push(this.movement());\r\n    }\r\n    this.setState({\r\n      moves: temp_moves\r\n    });\r\n  }\r\n\r\n  movement() {\r\n    const rotation = Math.floor((Math.round(Math.random()) * 2 - 1) * 600);\r\n    const fromX = Math.floor((Math.random() * window.innerWidth));\r\n    const fromY = Math.floor((Math.random() * window.innerHeight * 1.5));\r\n    const toX = Math.floor((Math.random() * window.innerWidth) * (Math.round(Math.random()) * 2 - 1));\r\n    const toY = Math.floor((Math.random() * window.innerHeight * 1.5) * (Math.round(Math.random()) * 2 - 1));\r\n    const temp = {\r\n      rotation,\r\n      fromX,\r\n      fromY,\r\n      toX,\r\n      toY,\r\n    };\r\n    return temp;\r\n  }\r\n\r\n  render() {\r\n    const { savedPictureList, background, size, time } = this.props;\r\n    const outerStyle = {\r\n      position: 'absolute',\r\n      top: '0',\r\n      left: '0',\r\n      width: '100%',\r\n      height: '100%',\r\n      margin: '0',\r\n      padding: '0',\r\n      overflow: 'hidden',\r\n      zIndex: '-1',\r\n      background\r\n    }\r\n\r\n    return (\r\n      <div style={outerStyle} id=\"sky\">\r\n        {this.state.moves.map((e, i) => {\r\n          const conditional = Math.floor(Math.random() * savedPictureList.length);\r\n          return <Item\r\n            savedPicture={savedPictureList[conditional]}\r\n            from={[e.fromX, e.fromY]}\r\n            to={[e.toX, e.toY]}\r\n            rotation={e.rotation}\r\n            size={size}\r\n            time={time}\r\n            key={i}\r\n          > {this.props.children}\r\n          </Item>\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nSky.defaultProps = {\r\n  size: '150px',\r\n  background: '',\r\n  time: 20,\r\n  children: null,\r\n}\r\n\r\nSky.propTypes = {\r\n  children: PropTypes.object,\r\n  size: PropTypes.string,\r\n  background: PropTypes.string,\r\n  time: PropTypes.number,\r\n  how: PropTypes.any.isRequired,\r\n  savedPictureList: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Sky;","import React, { Component } from \"react\";\r\nimport CanvasDraw from \"react-canvas-draw\";\r\nimport { Button } from 'antd';\r\nimport './App.css'\r\nimport 'antd/dist/antd.css'; \r\nimport Sky from './sky'\r\nimport reactLogo from './react.png'\r\nclass App extends Component {\r\n  state = {\r\n    color: \"#ffc600\",\r\n    width: 320,\r\n    height: 320,\r\n    brushRadius: 3,\r\n    lazyRadius: 3,\r\n    savedPictureList:[],\r\n  };\r\n\r\n  handleSavePicture=()=>{\r\n    const data =JSON.parse(this.saveableCanvas.getSaveData())\r\n    if(data.lines.length>0){\r\n      const savedPictureList= [...this.state.savedPictureList,this.saveableCanvas.getSaveData() ]\r\n      this.setState({\r\n        savedPictureList\r\n      })\r\n    }\r\n  \r\n  }\r\n  render() {\r\n    const {savedPictureList}=this.state\r\n    return (\r\n      <div className=\"App\">\r\n        <Sky\r\n         size='50px'\r\n         time={50} \r\n         how={10} \r\n         savedPictureList={savedPictureList}\r\n         > \r\n           </Sky>\r\n          <div className=\"canvas-drower \">\r\n            <div className=\"label\">\r\n              Eao toilet Wall\r\n            </div>\r\n          <CanvasDraw\r\n            style={{background: \"#6b6b6b47\" ,zIndex:\"25\",borderRadius:'14px'}}\r\n            hideGrid\r\n            ref={canvasDraw => (this.saveableCanvas = canvasDraw)}\r\n            brushColor={\"#\" + Math.floor(Math.random() * 16777215).toString(16)}\r\n            brushRadius={this.state.brushRadius}\r\n            lazyRadius={this.state.lazyRadius}\r\n            canvasWidth={this.state.width}\r\n            canvasHeight={this.state.height}\r\n          />\r\n            <div>\r\n              <Button onClick={this.handleSavePicture} > Save  </Button>\r\n              <Button onClick={() => {this.saveableCanvas.clear()}} >\r\n                Clear\r\n              </Button>\r\n              <Button onClick={() => {this.saveableCanvas.undo()}}  >\r\n                Undo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/react.47ce6e77.png\";"],"sourceRoot":""}